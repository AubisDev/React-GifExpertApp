{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","anime","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAElC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKlB,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,mCCPlBG,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKAA,EAAKC,OALL,cAKbC,EALa,OAMbC,EAAOD,EAAKA,KAAKE,KAAK,SAAAC,GACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,2CAAH,sDCCL,SAASO,EAAT,GAAyC,IAAlBJ,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,MAAOV,EAAM,EAANA,IAG7C,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,OAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,OCJD,SAASS,EAAT,GAAgC,IAE3C,ECHwB,SAAErB,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAW,WACP1B,EAASC,GACR0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAGlB,CAAEtB,IAEGuB,EDfyBK,CAFU,EAAZ5B,UAElBa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAGpB,OACI,sBAAKJ,UAAU,YAAf,UAEKI,GAAW,2CAEXT,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAACK,EAAD,eAEIL,GADGA,EAAIC,UEZZ,SAASkB,IAGpB,MAAoC3C,mBAAS,CAAC,YAAY,cAA1D,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,gCACI,+CACA,cAACD,EAAD,CAAaC,cAAeA,IAC5B,uBAEJ,6BACK6C,EAAWrB,KAAK,SAAAT,GAAQ,OACrB,cAACqB,EAAD,CAASrB,SAAUA,GACdA,WCdrB+B,IAASC,OAEL,cAACH,EAAD,IACAI,SAASC,eAAe,W","file":"static/js/main.b8763e92.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AddCategory({ setCategories }) {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(anime => [inputValue,...anime])\r\n            setInputValue('')\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input\r\n                type=\"text\" \r\n                value={inputValue}   \r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\nexport const getGifs = async( category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=akUYly1Ztg3pxJEH8DZT0pCE1Xz4DwVO`;\r\n\r\n    const resp = await fetch( url )\r\n    const data = await resp.json();\r\n    const gifs = data.data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n   \r\n}","import React from 'react'\r\n\r\nexport default function GifGridItem( {id, title, url}) {\r\n\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nexport default function GifGrid({ category }) {\r\n\r\n    const {data:images, loading } = useFetchGifs( category);\r\n\r\n\r\n    return (\r\n        <div className=\"card-grid\">\r\n\r\n            {loading && <p>Loading   </p>}\r\n\r\n            {images.map( img =>  (\r\n                <GifGridItem \r\n                key = {img.id}\r\n                {...img}\r\n                />     \r\n            )\r\n            )}\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs }       from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then( imgs =>{\r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n        } )\r\n    },[ category ])\r\n\r\n    return state\r\n}","import React,{ useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nexport default function GifExpertApp() {\r\n\r\n\r\n    const [categories, setCategories] = useState(['One Punch','Samurai X'])\r\n\r\n    return (\r\n        <div>\r\n            <h2> GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n        <ol>\r\n            {categories.map( category => (\r\n                <GifGrid category={category}\r\n                key={category}\r\n                />\r\n                ))\r\n            }\r\n        </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  GifExpertApp  from './GifExpertApp' \nReactDOM.render(\n  \n    <GifExpertApp />,  \n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}